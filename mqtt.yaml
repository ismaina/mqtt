---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --out mqtt.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
    - name: "15672"
      port: 15672
      targetPort: 15672
    - name: "15692"
      port: 15692
      targetPort: 15692
    - name: "5672"
      port: 5672
      targetPort: 5672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert --out mqtt.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: redis
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --out mqtt.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --out mqtt.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/main-app-external-network: "true"
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: CELERY_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: CELERY_BACKEND
                  name: envs--production--django
            - name: CELERY_BROKER
              valueFrom:
                configMapKeyRef:
                  key: CELERY_BROKER
                  name: envs--production--django
            - name: CELERY_FLOWER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: CELERY_FLOWER_PASSWORD
                  name: envs--production--django
            - name: CELERY_FLOWER_USER
              valueFrom:
                configMapKeyRef:
                  key: CELERY_FLOWER_USER
                  name: envs--production--django
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_PASS
                  name: envs--production--django
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_USER
                  name: envs--production--django
          image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 15672
            - containerPort: 15692
            - containerPort: 5672
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-data
      restartPolicy: Always
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
status: {}

---
apiVersion: v1
data:
  CELERY_BACKEND: redis://redis:6379/0
  CELERY_BROKER: amqp://admin:admin123456@rabbitmq:5672/
  CELERY_FLOWER_PASSWORD: admin123456
  CELERY_FLOWER_USER: admin
  RABBITMQ_DEFAULT_PASS: admin123456
  RABBITMQ_DEFAULT_USER: admin
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq-envs--production--django
  name: envs--production--django

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq-data
  name: rabbitmq-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: main-app-external-network
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/main-app-external-network: "true"
  podSelector:
    matchLabels:
      io.kompose.network/main-app-external-network: "true"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --out mqtt.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --out mqtt.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/main-app-external-network: "true"
        io.kompose.service: redis
    spec:
      containers:
        - image: redis:7-alpine
          name: redis
          ports:
            - containerPort: 6379
          resources: {}
      restartPolicy: Always
status: {}

